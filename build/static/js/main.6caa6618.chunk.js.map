{"version":3,"sources":["logo.svg","Navigation/Navigation.js","Content/views/Transaction/Transaction.js","Content/views/Proposal/Proposal.js","Content/Content.js","GlobalContext/GlobalContext.js","Global/Global.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavbarBrand","to","className","href","NavbarMain","Nav","defaultActiveKey","id","Navigation","TransactionContext","React","createContext","interim_public_key","set_public_key","interim_private_key","set_private_key","sender","transaction_data","txtype","public_key_hash","private_key_hash","PrivateKeyModal","props","useState","show","setShow","handleClose","Button","variant","onClick","Modal","onHide","centered","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","as","rows","onChange","handle_private_key_change","Footer","handle_private_key_save","PublicKeyModal","handle_public_key_change","handle_public_key_save","Transaction","bind","handle_sender_change","handle_txtype_change","handle_transaction_data_change","create_transaction","state","event","console","log","target","value","this","setState","preventDefault","object_to_pass","window","ipcRenderer","send","on","result","Result","transaction_submission_status","Provider","Consumer","Container","Row","Col","lg","span","offset","Card","Text","InputGroup","Prepend","FormControl","aria-describedby","placeholder","custom","resizable","style","height","maxWidth","Component","ProposalContext","latest_proposal","LatestProposal","proposal","JSON","parse","badge","status","Badge","GetBadge","proposal_status","proposal_id","proposal_hash","e","Spinner","animation","role","Proposal","get_latest_proposal","setInterval","Content","exact","path","component","GlobalContext","global_state_ip_address","global_state_ip_address_interim","global_state_block_height","NodeAddressStatus","NodeAddress","global_state_onchange_handler","global_state_onsubmit_handler","GlobalMetrics","HeaderCSS","rel","integrity","crossOrigin","GlobalCSS","GlobalComponent","default_node_ip_address_display","handleNodeIPAddressChange","handleNodeIPAddressSubmit","block_height","get_global_metrics","App","src","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6caa6618.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Nav, Navbar, Form, FormControl } from 'react-bootstrap';\n\n\nconst NavbarBrand = () => (\n  <>\n  <NavLink to='/' className=\"nav-item nav-link\" href=\"#\">\n    <span className=\"navbar-brand\">\n      <div className=\"container offset-2 col-lg-9\">\n        <div className=\"row\">\n          AOS\n        </div>\n      </div>\n    </span>\n  </NavLink>\n  </>\n);\n\nconst NavbarMain = () => (\n\n  <div className=\"container navbar-nav navbar-expand-lg navbar-dark bg-dark\">\n    <div className=\"row\">\n      <Nav defaultActiveKey=\"/home\" id=\"nav_sidebar\" className=\"flex-column\">\n        <NavbarBrand/>\n        <NavLink to='/' className=\"nav-item nav-link main_nav\" href=\"#\">\n          Proposals <span className=\"sr-only\">(current)</span>\n        </NavLink>\n        <NavLink to='/transactions' className=\"nav-item nav-link main_nav\">\n          Transactions\n        </NavLink>\n      </Nav>\n    </div>\n  </div>\n\n);\n\n//\n// const element = <TestProp name=\"dev\" />;\n\n\n/*\n@name\n@description global navigator\n*/\nconst Navigation = () => (\n  <NavbarMain/>\n);\n\n\n\n// export the navigation component\nexport default Navigation;\n","import React from 'react';\nimport { Form,\n         Button,\n         Badge,\n         Container,\n         Row,\n         Col,\n         Card,\n         InputGroup,\n         FormControl,\n         Modal } from 'react-bootstrap';\n\n\nexport const TransactionContext = React.createContext({\n  interim_public_key: \"blank public key\",\n  set_public_key: \"blank public key\",\n  interim_private_key: \"blank private key\",\n  set_private_key: \"blank private key\",\n  sender: \"blank sender\",\n  transaction_data: \"blank transaction data\",\n  txtype: \"output\",\n  public_key_hash: \"PUBKHASH\",\n  private_key_hash: \"PRIVKHASH\"\n});\n\n\nconst PrivateKeyModal = (props) => {\n  const [show, setShow] = React.useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"info\" className=\"float-left\" onClick={handleShow}>\n        Private Key\n      </Button>\n\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Set Private Key for Transaction</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Private Key</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"3\"\n                          onChange={props.handle_private_key_change} />\n          </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={props.handle_private_key_save}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\nconst PublicKeyModal = (props) => {\n  const [show, setShow] = React.useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"info\" className=\"float-left\" onClick={handleShow}>\n        Public Set Key\n      </Button>\n\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Set Public Key for Transaction</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Public Key</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"3\"\n                          onChange={props.handle_public_key_change} />\n          </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={props.handle_public_key_save}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\nclass Transaction extends React.Component{\n\n  constructor(props) {\n    super(props);\n\n    // bind component functions\n    this.handle_public_key_save = this.handle_public_key_save.bind(this);\n    this.handle_public_key_change = this.handle_public_key_change.bind(this);\n\n    this.handle_private_key_save = this.handle_private_key_save.bind(this);\n    this.handle_private_key_change = this.handle_private_key_change.bind(this);\n\n    this.handle_sender_change = this.handle_sender_change.bind(this);\n    this.handle_txtype_change = this.handle_txtype_change.bind(this);\n    this.handle_transaction_data_change = this.handle_transaction_data_change.bind(this);\n    this.create_transaction = this.create_transaction.bind(this);\n\n    this.state = {\n      interim_public_key: \"blank public key\",\n      set_public_key: \"blank public key\",\n      interim_private_key: \"blank private key\",\n      set_private_key: \"default private key\",\n      sender: \"default sender\",\n      transaction_data: \"default transaction data\",\n      txtype: \"output\",\n      public_key_hash: \"PUBKHASH\",\n      private_key_hash: \"PRIVKHASH\"\n    }\n  }\n\n  handle_sender_change(event){\n    console.log(\"handle sender change: \"+event.target.value)\n    this.setState({\n      sender: event.target.value\n    })\n    event.preventDefault();\n  }\n\n  handle_txtype_change(event){\n    console.log(\"handle txtype change: \"+event.target.value)\n    this.setState({\n      txtype: event.target.value\n    })\n    event.preventDefault();\n  }\n\n  handle_transaction_data_change(event){\n    console.log(\"handle transaction data: \"+event.target.value)\n    this.setState({\n      transaction_data: event.target.value\n    })\n    event.preventDefault();\n  }\n\n  async create_transaction(event){\n    console.log(\"create_transaction: \")\n    console.log(this.props)\n    let object_to_pass = this.state\n    object_to_pass[\"global_state\"] = this.props.state\n    //window.ipcRenderer.send('transaction_submit_output_call_message', this.state)\n    window.ipcRenderer.send('transaction_submit_output_call_message', object_to_pass)\n    event.preventDefault();\n  }\n\n  //private\n  handle_private_key_save(event){\n    console.log(\"HANDLE PRIVATE SAVE: \"+this.state.interim_private_key)\n    window.ipcRenderer.send('private_key_save_call_message', this.state)\n    event.preventDefault();\n  }\n\n  handle_private_key_change(event){\n    console.log(\"HANDLE private key change: \"+event.target.value)\n    this.setState({\n      interim_private_key: event.target.value\n    })\n    event.preventDefault();\n  }\n\n  //public\n  handle_public_key_save(event){\n    console.log(\"HANDLE PUBLIC SAVE: \"+this.state.interim_public_key)\n    window.ipcRenderer.send('public_key_save_call_message', this.state)\n    event.preventDefault();\n  }\n\n  handle_public_key_change(event){\n    console.log(\"HANDLE public key change: \"+event.target.value)\n    this.setState({\n      interim_public_key: event.target.value\n    })\n    event.preventDefault();\n  }\n\n  async componentDidMount(props) {\n\n    let state = this.props.state\n    // TODO: perhaps set interval and call this.loadMonitoredUsers, and others?\n    console.log(\"component loaded...\")\n    window.ipcRenderer.on('private_key_save_call_reply', (event, result) => {\n      //console.log(result)\n      console.log(\"private_key_save_call_reply returnss\")\n      console.log(result)\n      this.setState({\n        interim_private_key: this.props.state.interim_private_key,\n        set_private_key: result.Result,\n        private_key_hash: result.Result\n      });\n    })\n\n    window.ipcRenderer.on('public_key_save_call_reply', (event, result) => {\n      //console.log(result)\n      console.log(\"public_key_save_call_reply returnss\")\n      console.log(result)\n      this.setState({\n        interim_public_key: this.props.state.interim_public_key,\n        set_public_key: result.Result,\n        public_key_hash: result.Result\n      });\n    })\n\n    window.ipcRenderer.on('transaction_submit_output_call_reply', (event, result) => {\n      //console.log(result)\n      console.log(\"transaction_submit_output_call_reply returnss\")\n      this.setState({\n        transaction_submission_status: \"done\"\n      });\n    })\n\n  }\n\n  render(props){\n\n    console.log(\"Transaction: Props from global\")\n    console.log(this.props.state)\n\n    return (\n      <TransactionContext.Provider value={this.state}>\n        <TransactionContext.Consumer>\n          {( {set_private_key,\n              interim_private_key,\n              set_public_key,\n              interim_public_key,\n              public_key_hash,\n              private_key_hash} ) => (\n            <>\n              <br/>\n              <Container>\n                <Row>\n                  <Col lg={{span: 5, offset: 1}}>\n                    <Card lg={{span: 2, offset: 2}}>\n                      <Card.Header>\n                        <h4 className=\"address_status float-left\">\n                          Submit Transaction\n                        </h4>\n                      </Card.Header>\n                      <Card.Body>\n                        <Card.Text>\n                        {/**/}\n                        <Container>\n                          <Row>\n                            <Col lg={{span: 12, offset: 0}}>\n\n                              <InputGroup className=\"mb-3\">\n                                <InputGroup.Prepend>\n                                  <InputGroup.Text  id=\"basic-addon3\">\n                                    Sender\n                                  </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl id=\"basic-url\"\n                                             aria-describedby=\"basic-addon3\"\n                                             placeholder=\"ex: user_a\"\n                                             onChange={this.handle_sender_change} />\n                              </InputGroup>\n\n\n                              <InputGroup className=\"mb-3\">\n                                <InputGroup.Prepend>\n                                  <InputGroup.Text  id=\"basic-addon3\">\n                                    TX Type:\n                                  </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                  <Form.Control\n                                    as=\"select\"\n                                    onChange={this.handle_txtype_change}\n                                    custom>\n                                      <option>output</option>\n                                      <option>input</option>\n                                  </Form.Control>\n                              </InputGroup>\n\n\n                              <InputGroup className=\"mb-3\">\n                                <InputGroup.Prepend>\n                                  <InputGroup.Text  id=\"basic-addon3\">\n                                    Transaction Data\n                                  </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl id=\"basic-url\"\n                                             as=\"textarea\"\n                                             rows=\"3\"\n                                             resizable=\"false\"\n                                             aria-describedby=\"basic-addon3\"\n                                             placeholder=\"ex: user_a\"\n                                             onChange={this.handle_transaction_data_change} />\n                              </InputGroup>\n\n                              <Button className=\"float-left\" variant=\"outline-secondary\" onClick={this.create_transaction}>\n                                Submit\n                              </Button>\n\n\n                            </Col>\n\n                            <Col lg={{span: 12, offset: 0}}>\n                              <hr/><h1>TEST</h1>\n                            </Col>\n\n                          </Row>\n                        </Container>\n                        {/**/}\n                        </Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n\n                  {/*PRIVATE KEY*/}\n                  <Col>\n                    <Row>\n                      <Col lg={{span: 12, offset: 0}}>\n                        <Card lg={{span: 2, offset: 2}}>\n                          <Card.Header>\n                            <Row>\n                              <Col>\n                                <h4 className=\"address_status float-left\">\n                                  Private Key\n                                </h4>\n                              </Col>\n                              <Col>\n                                <PrivateKeyModal handle_private_key_save={this.handle_private_key_save}\n                                          handle_private_key_change={this.handle_private_key_change}\n                                          set_private_key={set_private_key} />\n\n                                <PublicKeyModal handle_public_key_save={this.handle_public_key_save}\n                                          handle_public_key_change={this.handle_public_key_change}\n                                          set_public_key={set_public_key} />\n                              </Col>\n                            </Row>\n                          </Card.Header>\n                          <Card.Body>\n                            <Card.Text>\n                            {/**/}\n                            <Row style={{ height: 'auto', maxWidth: '40vw' }}>\n                              <Col>\n                                <b>?:</b> {set_private_key}\n                                <hr/>\n                              </Col>\n                            </Row>\n                            <Row style={{ height: 'auto', maxWidth: '40vw' }}>\n                              <Col>\n                                <b>Public Key: </b> {public_key_hash}\n                                <hr/>\n                              </Col>\n                            </Row>\n                            <Row style={{ height: 'auto', maxWidth: '40vw' }}>\n                              <Col>\n                                <b>Private Key: </b> {private_key_hash}\n                                <hr/>\n                              </Col>\n                            </Row>\n                            {/**/}\n                            </Card.Text>\n                          </Card.Body>\n                        </Card>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </Container>\n              <br/>\n            </>\n          )}\n        </TransactionContext.Consumer>\n      </TransactionContext.Provider>\n    )\n  }\n}\n\n\n\nexport default Transaction;\n","import React from 'react';\nimport { Form, Button, Card, Container, Row, Col, Badge, Spinner } from 'react-bootstrap';\n\n\n/*\n@name ProposalContext\n@description proposal context\n*/\nexport const ProposalContext = React.createContext({\n  latest_proposal: 0\n});\n\nfunction GetBadge(status){\n  switch(status){\n      case \"pending\":\n        return (<Badge variant=\"secondary\">Pending</Badge>)\n        break;\n      case \"created\":\n        return (<Badge variant=\"secondary\">Pending</Badge>)\n        break;\n      case \"accepted\":\n        return (<Badge variant=\"info\">Accepted</Badge>)\n        break;\n      case \"rejected_broadcasted\":\n        return (<Badge variant=\"warning\">Rejected Broadcasted</Badge>)\n        break;\n      case \"accepted_broadcasted\":\n        return (<Badge variant=\"warning\">Accepted Broadcasted</Badge>)\n        break;\n      case \"rejected_by_network\":\n        return (<Badge variant=\"danger\">Rejected By Network</Badge>)\n        break;\n      case \"accepted_by_network\":\n        return (<Badge variant=\"info\">Accepted By Network</Badge>)\n        break;\n      case \"committed\":\n        return (<Badge variant=\"success\">Committed</Badge>)\n        break;\n      default:\n      console.log(status)\n        return (<Badge variant=\"secondary\">UNKNOWN</Badge>)\n        break;\n  }\n}\n\nclass LatestProposal extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = \"\"\n  }\n\n  render(props){\n    //JSON.parse({\"yo\":\"fg\"})\n    //console.log(JSON)\n    //console.log(JSON.parse(\"\\{\\'res\\':\\'fd\\'\\}\"))\n\n    /*\n    {\"proposal_id\":315,\"proposal_status\":\"committed\",\"proposal_hash\":\"df91cb283da6a1660b9d5cd4d2ca34804db13805e9b1869ff9cd117742328ee5\",\"proposal_time\":\"1588208969\",\"proposal_sender\":\"docker.for.mac.host.internal:8081\",\"proposal_block\":{\"block_id\":315,\"block_hash\":\"b22b62fdd9a06e8eb2e6c18816ee5d146a4470f347763adc5da6805d9300b46c\",\"block_parent_hash\":\"0fe34b96c47a9304d037627fa8fcae2d4a9b444e2a222aac9da0abb86bd37f1b\",\"block_time\":\"1588208969\",\"proposal_hash\":\"df91cb283da6a1660b9d5cd4d2ca34804db13805e9b1869ff9cd117742328ee5\",\"block_data\":\"TEST DATA\",\"transactions\":{}}}\n    */\n    // console.log(\"TEST: \")\n    // console.log(this.props)\n    // console.log(this.props.proposal)\n    // console.log(this.props[\"proposal\"])\n    // console.log(typeof(this.props.proposal))\n    // console.log(TEST(this.props.proposal))\n    // console.log(JSON.parse)\n    // console.log( JSON.parse('{\"proposal_id\":315,\"proposal_status\":\"committed\",\"proposal_hash\":\"df91cb283da6a1660b9d5cd4d2ca34804db13805e9b1869ff9cd117742328ee5\",\"proposal_time\":\"1588208969\",\"proposal_sender\":\"docker.for.mac.host.internal:8081\",\"proposal_block\":{\"block_id\":315,\"block_hash\":\"b22b62fdd9a06e8eb2e6c18816ee5d146a4470f347763adc5da6805d9300b46c\",\"block_parent_hash\":\"0fe34b96c47a9304d037627fa8fcae2d4a9b444e2a222aac9da0abb86bd37f1b\",\"block_time\":\"1588208969\",\"proposal_hash\":\"df91cb283da6a1660b9d5cd4d2ca34804db13805e9b1869ff9cd117742328ee5\",\"block_data\":\"TEST DATA\",\"transactions\":{}}}') )\n\n    try {\n\n      //TODO: add error handling\n      let proposal = JSON.parse( this.props.proposal )\n      let badge = GetBadge(proposal.proposal_status)\n\n      return (\n        <>\n          <br/>\n          <Card>\n            <Card.Header>Proposal #{proposal.proposal_id} <h3>{badge}</h3></Card.Header>\n            <Card.Body>\n              <Card.Title>Hash: {proposal.proposal_hash}</Card.Title>\n              <Card.Text>\n                With supporting text below as a natural lead-in to additional content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n\n          {/*<div className=\"container col-lg-4\">\n            <div className=\"row\">\n              <div className=\"container col-lg-4\">\n              A\n              </div>\n              <div className=\"container col-lg-4\">\n              B\n              </div>\n            </div>\n          </div>\n          <div className=\"container col-lg-4\">\n            <div className=\"row\">\n              <div className=\"container col-lg-4\">\n                A\n              </div>\n              <div className=\"container col-lg-4\">\n                B\n              </div>\n            </div>\n          </div>\n          <div className=\"container col-lg-4\">\n            <div className=\"row\">\n              <div className=\"container col-lg-4\">\n                A\n              </div>\n              <div className=\"container col-lg-4\">\n                B\n              </div>\n            </div>\n          </div>*/}\n        </>\n      )\n\n    } catch (e) {\n      return (\n        <>\n          <br/>\n          <Card>\n            <Card.Header>\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"sr-only\">ERROR...</span>\n            </Spinner>\n            </Card.Header>\n            <Card.Body>\n              <Card.Title>Could not load latest proposal</Card.Title>\n              <Card.Text>\n                With supporting text below as a natural lead-in to additional content.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </>\n      )\n    }\n\n  }\n}\n\n/*\n@name\n@description\n*/\nclass Proposal extends React.Component{\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      latest_proposal: \"default\"\n    }\n\n  }\n\n  /*\n  @name\n  @description\n  */\n  async get_latest_proposal(state){\n    window.ipcRenderer.send('latest_proposal_call_message', state)\n  }\n\n  /*\n  @name\n  @description\n  */\n  async componentDidMount(props) {\n    // TODO: perhaps set interval and call this.loadMonitoredUsers, and others?\n    console.log(\"component loaded... interval being invoked..\")\n    //this.loadMonitoredUsers(\"g\")\n    let get_latest_proposal = this.get_latest_proposal\n    window.ipcRenderer.on('latest_proposal_call_reply', (event, result) => {\n      //console.log(result)\n      //console.log(\"latest_proposal returnss\")\n      this.setState({\n        latest_proposal: result.Result\n      });\n    })\n    let state = this.props.state\n    setInterval((function(){\n      //iteratively call for proposal on disk\n      //TODO: if real-time is displayed\n      //window.ipcRenderer.send('latest_proposal_call_message', state)\n      get_latest_proposal(state)\n      //get_latest_proposal()\n    }), 5000)\n\n  }\n\n  render(props){\n\n    console.log(\"Proposal: Props from global\")\n    console.log(this.props.state)\n\n    return (\n      <ProposalContext.Provider value={this.state}>\n        <ProposalContext.Consumer>\n          {( {latest_proposal} ) => (\n            <>\n            <Container >\n              <Row>\n                <Col lg={{span: 11, offset: 1}}>\n                  <LatestProposal proposal={latest_proposal} />\n                </Col>\n              </Row>\n            </Container>\n            {/*<div className=\"container offset-2 col-lg-9\">\n              <div className=\"row\">\n                <div className=\"card col-lg\">\n                  <div className=\"card-body\">\n                    <div className=\"md-form active-pink active-pink-2\">\n\n                      <div id=\"proposal_result\">\n                        <LatestProposal proposal={latest_proposal} />\n                      </div>\n\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>*/}\n            <br/>\n            </>\n          )}\n        </ProposalContext.Consumer>\n      </ProposalContext.Provider>\n    )\n  }\n}\n\n// export component as default\nexport default Proposal;\n","import React from 'react';\nimport { Switch, Route, IndexRoute } from 'react-router-dom';\nimport Transaction from './views/Transaction/';\nimport Proposal from './views/Proposal/';\n\n\n\n/*\n@name Content\n@description content component containing the main navigation router\nThis is because a Route will match for any URL that contains its path by default\n*/\nclass Content extends React.Component {\n  render(props){\n    console.log(this.props)\n    return (\n      <>\n      <Switch>\n        <Route exact path='/' component={() => <Proposal state={this.props.state}/>}></Route>\n        <Route exact path='/transactions' component={() => <Transaction state={this.props.state}/>}></Route>\n      </Switch>\n      </>\n    )\n  }\n}\n\n\nexport default Content;\n","import React from 'react'\n\nconst GlobalContext = React.createContext({\n  global_state_ip_address: \"\",\n  global_state_ip_address_interim: \"TEST\",\n  global_state_block_height: -1\n});\n\nexport default GlobalContext;\n","import React from 'react';\nimport { InputGroup, FormControl, Button, Badge, Container, Row, Col, Card } from 'react-bootstrap';\nimport GlobalContext  from '../GlobalContext/'\n\n\nclass NodeAddressStatus extends React.Component {\n  render(props){\n    console.log(this.props)\n    if (this.props.status == \"unsaved\") {\n        return (<Badge variant=\"warning\">{this.props.status}</Badge>)\n    } else {\n        return (<Badge variant=\"success\">{this.props.status}</Badge>)\n    }\n  }\n}\n\n/*\n@name NodeAddress\n@description component for setting the node address globally\n*/\nclass NodeAddress extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render(props){\n    return (\n      <GlobalContext.Consumer>\n        {( {global_state_ip_address} ) => (\n          <>\n            <Card lg={{span: 2, offset: 2}}>\n              <Card.Header>\n                <h4 className=\"address_status float-left\">\n                  Set Node Address\n                </h4>\n              </Card.Header>\n              <Card.Body>\n\n                <Card.Title>\n                  <NodeAddressStatus status={global_state_ip_address}/>\n                </Card.Title>\n\n                <Card.Text>\n                <div id=\"proposal_result\">\n                  <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text  id=\"basic-addon3\">\n                        Node\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl id=\"basic-url\"\n                                 aria-describedby=\"basic-addon3\"\n                                 placeholder=\"ex: 127.0.0.1\"\n                                 onChange={this.props.global_state_onchange_handler} />\n                    <InputGroup.Prepend>\n                      <Button variant=\"outline-secondary\" onClick={this.props.global_state_onsubmit_handler}>Save</Button>\n                    </InputGroup.Prepend>\n                  </InputGroup>\n                </div>\n                </Card.Text>\n\n\n\n              </Card.Body>\n            </Card>\n          </>\n        )}\n      </GlobalContext.Consumer>\n    );\n  }\n}\n\n/*\n@name GlobalMetrics\n@description component for display global metrics\n*/\nclass GlobalMetrics extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render(props){\n    console.log(\"GlobalMetrics\")\n    console.log(this.props)\n    return (\n      <GlobalContext.Consumer>\n        {( {global_state_block_height} ) => (\n          <>\n          <Card lg={{span: 2, offset: 2}}>\n            <Card.Header>\n              <h4 className=\"address_status float-left\">\n                Metrics\n              </h4>\n            </Card.Header>\n            <Card.Body>\n\n\n              <Card.Text>\n                <Container >\n                  <Row>\n                    <Col lg={{span: 6, offset: 0}} className=\"global_metric_columns\">\n                      Height:\n                      <Badge variant=\"info\">\n                        {global_state_block_height}\n                      </Badge>\n                    </Col>\n                    <Col lg={{span: 6, offset: 0}} className=\"global_metric_columns\">\n                      TXs:\n                      <Badge variant=\"success\">\n                        {global_state_block_height}\n                      </Badge>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col lg={{span: 6, offset: 0}} className=\"global_metric_columns\">\n                      Accts:\n                      <Badge variant=\"warning\">\n                        {global_state_block_height}\n                      </Badge>\n                    </Col>\n                    <Col lg={{span: 6, offset: 0}} className=\"global_metric_columns\">\n                      test:\n                      <Badge variant=\"danger\">\n                        {global_state_block_height}\n                      </Badge>\n                    </Col>\n                  </Row>\n                </Container>\n              </Card.Text>\n\n\n\n            </Card.Body>\n          </Card>\n          </>\n        )}\n      </GlobalContext.Consumer>\n    )\n  }\n}\n\nexport { NodeAddress, GlobalMetrics };\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { NavLink, Switch, Route } from 'react-router-dom';\nimport Navigation from './Navigation/';\nimport Content from './Content/'\nimport { NodeAddress, GlobalMetrics } from './Global/'\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport GlobalContext  from './GlobalContext/'\n\n\nclass Output extends React.Component{\n  render(){\n    return (\n      <div>Test Outputsss</div>\n    )\n  }\n}\n\n\n/*\n@name HeaderCSS\n@ddescription\n*/\nclass HeaderCSS extends React.Component {\n  render() {\n    return (<link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n            integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\n            crossOrigin=\"anonymous\"\n            />)\n  }\n}\n\n\nconst GlobalCSS = <HeaderCSS />\n\n/*\n@name\n@description\n*/\nclass GlobalComponent extends React.Component {\n  default_node_ip_address_display = \"unsaved\"\n\n  constructor(props) {\n    super(props)\n    this.handleNodeIPAddressChange = this.handleNodeIPAddressChange.bind(this);\n    this.handleNodeIPAddressSubmit = this.handleNodeIPAddressSubmit.bind(this);\n    this.state = {\n      global_state_ip_address: \"\",\n      global_state_ip_address_interim: \"\",\n      global_state_block_height: -1\n    }\n  }\n\n  /*\n  @name get_global_metrics\n  @description\n  */\n  async get_global_metrics(){\n    window.ipcRenderer.send('global_metric_call_message', this.state)\n  }\n\n\n  componentDidMount(){\n    this.setState({\n      global_state_ip_address: this.default_node_ip_address_display,\n      global_state_ip_address_interim: \"TESTss\",\n      global_state_block_height: -1\n    });\n\n    window.ipcRenderer.on('global_metric_call_reply', (event, result) => {\n      console.log(result)\n      console.log(\"global_metric returns\")\n\n      this.setState({\n        global_state_ip_address: this.state.global_state_ip_address,\n        global_state_ip_address_interim: this.state.global_state_ip_address_interim,\n        global_state_block_height: result.result.block_height\n      });\n\n    })\n\n    this.get_global_metrics()\n\n  }\n\n  /*\n  @name handleNodeIPAddressChange\n  @description\n  */\n  handleNodeIPAddressChange(event) {\n    console.log(\"changed: \"+this.state.global_state_ip_address)\n    this.setState({\n      global_state_ip_address: this.default_node_ip_address_display,\n      global_state_ip_address_interim: event.target.value,\n      global_state_block_height: this.state.global_state_block_height\n    });\n    event.preventDefault();\n  }\n\n  /*\n  @name handleNodeIPAddressSubmit\n  @description\n  */\n  handleNodeIPAddressSubmit(event) {\n    console.log('A address was submitted 1: ' + this.state.global_state_ip_address);\n    console.log('A address was submitted 2: ' + this.state.global_state_ip_address_interim);\n\n    this.setState({\n      global_state_ip_address:  this.state.global_state_ip_address_interim,\n      global_state_ip_address_interim: this.state.global_state_ip_address_interim,\n      global_state_block_height: this.state.global_state_block_height\n    });\n\n    console.log('Address change confirm: ');\n    console.log(this.state);\n    this.get_global_metrics()\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <>\n      <GlobalContext.Provider value={this.state}>\n        <GlobalContext.Consumer>\n          {( {global_state_ip_address} ) => (\n            <>\n            <Navigation />\n\n            <br/>\n            <Container >\n              <Row>\n                <Col lg={{span: 5, offset: 1}}>\n                  <NodeAddress global_state_onchange_handler={this.handleNodeIPAddressChange}\n                               global_state_onsubmit_handler={this.handleNodeIPAddressSubmit} />\n                </Col>\n                <Col lg={{span: 6, offset: 0}}>\n                  <GlobalMetrics />\n                </Col>\n              </Row>\n            </Container>\n\n            {/*<div className=\"container offset-2 col-lg-12\" id=\"status\">\n              <div className=\"row\">\n                <NodeAddress global_state_onchange_handler={this.handleNodeIPAddressChange} global_state_onsubmit_handler={this.handleNodeIPAddressSubmit} global_state={global_state_ip_address} />\n                <GlobalMetrics global_state={global_state_ip_address} />\n              </div>\n            </div>*/}\n\n            <Content state={this.state} />\n            </>\n          )}\n        </GlobalContext.Consumer>\n      </GlobalContext.Provider>\n      </>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n      <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.0.1/jquery.min.js\"></script>\n      <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react.min.js\"></script>\n      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-dom.min.js\"></script>\n\n      {GlobalCSS}\n      <GlobalComponent />\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}